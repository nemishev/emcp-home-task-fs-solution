services:
  # Make use of nginx reverse proxy for enhancing security and routing between client and server
  reverse-proxy:
    build: ./reverse-proxy
    environment:
      CLIENT_PORT: ${CLIENT_PORT}
      SERVER_PORT: ${SERVER_PORT}
    ports:
      - 80:80
    restart: always
    depends_on:
      - client

  client:
    build:
      context: ./client
      target: development
      args:
        - NODE_VERSION=${NODE_VERSION}
    container_name: client
    environment:
      - PORT=${CLIENT_PORT}
      - REDIS_CONNECT_URL=${REDIS_CONNECT_URL}
    expose:
      - ${CLIENT_PORT}
    volumes:
      - ./client/:/usr/share/app
      - /usr/share/app/node_modules
    restart: on-failure
    depends_on:
      - server
    command: npm run dev

  server:
    build:
      context: ./server
      target: development
      args:
        - NODE_VERSION=${NODE_VERSION}
    container_name: server
    environment:
      - PORT=${SERVER_PORT}
      - REDIS_CONNECT_URL=${REDIS_CONNECT_URL}
    expose:
      - ${SERVER_PORT}
    volumes:
      - ./server/:/usr/share/app
      - /usr/share/app/node_modules
    restart: on-failure
    depends_on:
      - redis
    command: npm run start:dev

  redis:
    container_name: redis
    image: redis:7
    restart: on-failure
